/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Secp256k1,
  Secp256k1Interface,
} from "../../../bip340-solidity/contracts/Secp256k1";

const _abi = [
  {
    inputs: [],
    name: "AA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privKey",
        type: "uint256",
      },
    ],
    name: "derivePubKey",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610a5c61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c80639870e2a4116100655780639870e2a4146100f5578063997da8d41461011c578063bc9e2bcf14610124578063eeeac01e1461014c57600080fd5b806303a507be1461008c5780635727dc5c146100c65780637a308a4c146100ce575b600080fd5b6100b37f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179881565b6040519081526020015b60405180910390f35b6100b3600781565b6100b37f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b881565b6100b37ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414181565b6100b3600081565b610137610132366004610920565b610173565b604080519283526020830191909152016100bd565b6100b37ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f81565b6000806101e4837f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f817987f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b860007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f6101ed565b91509150915091565b60008060008060006102048a8a8a60018b8b610227565b925092509250610216838383896102a9565b945094505050509550959350505050565b60008060008860000361024157508691508590508461029d565b8860008060015b831561029457600184161561026e576102668383838f8f8f8e610318565b919450925090505b610279600285610997565b93506102888c8c8c8c8c61066a565b919d509b509950610248565b91955093509150505b96509650969350505050565b60008060006102b8858561080d565b9050600084806102ca576102ca610939565b8283099050600085806102df576102df610939565b828a099050600086806102f4576102f4610939565b878061030257610302610939565b8486098a09919a91995090975050505050505050565b6000808089158015610328575088155b1561033a57508591508490508361065d565b86158015610346575085155b1561035857508891508790508661065d565b610360610902565b848061036e5761036e610939565b898a098152848061038157610381610939565b81518a096020820152848061039857610398610939565b868709604082015284806103ae576103ae610939565b60408201518709606082015260408051608081019091528086806103d4576103d4610939565b60408401518e09815260200186806103ee576103ee610939565b60608401518d098152602001868061040857610408610939565b83518b098152602001868061041f5761041f610939565b60208401518a0990526040810151815191925014158061044757506060810151602082015114155b6104b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e7374656164000060448201526064015b60405180910390fd5b6104ba610902565b85806104c8576104c8610939565b82516104d490886109d2565b604084015108815285806104ea576104ea610939565b60208301516104f990886109d2565b6060840151086020820152858061051257610512610939565b815180096040820152858061052957610529610939565b815160408301510960608201526000868061054657610546610939565b606083015161055590896109d2565b888061056357610563610939565b60208501518009089050868061057b5761057b610939565b878061058957610589610939565b888061059757610597610939565b60408501518651096002096105ac90896109d2565b82089050600087806105c0576105c0610939565b88806105ce576105ce610939565b6105d8848b6109d2565b8a806105e6576105e6610939565b6040870151885109086020850151099050878061060557610605610939565b888061061357610613610939565b6060850151602087015109610628908a6109d2565b820890506000888061063c5761063c610939565b898061064a5761064a610939565b8b8f098551099297509095509093505050505b9750975097945050505050565b600080600085600003610684575086915085905084610802565b6000848061069457610694610939565b898a099050600085806106a9576106a9610939565b898a099050600086806106be576106be610939565b898a099050600087806106d3576106d3610939565b88806106e1576106e1610939565b848e096004099050600088806106f9576106f9610939565b898061070757610707610939565b8a8061071557610715610939565b8586098c098a8061072857610728610939565b87600309089050888061073d5761073d610939565b898061074b5761074b610939565b838408610758908b6109d2565b8a8061076657610766610939565b838409089450888061077a5761077a610939565b898061078857610788610939565b8a8061079657610796610939565b8687096008096107a6908b6109d2565b8a806107b4576107b4610939565b8b806107c2576107c2610939565b6107cc898e6109d2565b8608840908935088806107e1576107e1610939565b89806107ef576107ef610939565b8c8e096002099497509295509293505050505b955095509592505050565b6000821580159061081e5750818314155b801561082957508115155b61088f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c6964206e756d62657200000000000000000000000000000000000060448201526064016104a9565b6000600183825b86156108f7576108a68783610997565b90508286806108b7576108b7610939565b87806108c5576108c5610939565b8584096108d290896109d2565b86089094509250866108e481836109e9565b6108ee90846109d2565b97509150610896565b509195945050505050565b60405180608001604052806004906020820280368337509192915050565b60006020828403121561093257600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000826109cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000828210156109e4576109e4610968565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a2157610a21610968565b50029056fea26469706673582212204b531ffbada51c269adc4f4e49358d20fc334ed56491923bd5f7df921a69e72464736f6c634300080f0033";

type Secp256k1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Secp256k1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Secp256k1__factory extends ContractFactory {
  constructor(...args: Secp256k1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Secp256k1> {
    return super.deploy(overrides || {}) as Promise<Secp256k1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Secp256k1 {
    return super.attach(address) as Secp256k1;
  }
  override connect(signer: Signer): Secp256k1__factory {
    return super.connect(signer) as Secp256k1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Secp256k1Interface {
    return new utils.Interface(_abi) as Secp256k1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Secp256k1 {
    return new Contract(address, _abi, signerOrProvider) as Secp256k1;
  }
}
