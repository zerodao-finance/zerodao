/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { SZERO, SZEROInterface } from "../../../contracts/token/SZERO";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "masterChef",
        type: "address",
      },
    ],
    name: "setMasterChef",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60808060405234610016576117a7908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461114f57508063095ea7b31461110757806318160ddd146110ca57806323b872dd1461107c578063313ce567146110425780633950935114610fc857806340c10f1914610eb557806370a0823114610e53578063715018a614610db25780638129fc1c146108065780638da5cb5b146107b357806395d89b41146106965780639dc29fac1461063a578063a2d9f4dc146105b7578063a457c2d7146104ae578063a9059cbb14610251578063dd62ed3e146101d95763f2fde38b146100e957600080fd5b346101d55760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d55761012061128b565b906101296112d6565b73ffffffffffffffffffffffffffffffffffffffff821615610152575061014f90611355565b51f35b60849060208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b50503461024d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d578060209261021561128b565b61021d6112b3565b73ffffffffffffffffffffffffffffffffffffffff91821683526034865283832091168252845220549051908152f35b5080fd5b5091346104ab57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104ab5761028961128b565b6024359073ffffffffffffffffffffffffffffffffffffffff906102b28260975416331461170c565b331561042857169182156103a5573381526033602052838120548281106103225760209550908285923383526033885203828220558381522081815401905582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b60848660208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b60848560208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60848660208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b5082346104ab57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104ab576104e661128b565b918360243592338152603460205281812073ffffffffffffffffffffffffffffffffffffffff861682526020522054908282106105345760208561052d85850387336114c2565b5160018152f35b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b50503461024d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d5773ffffffffffffffffffffffffffffffffffffffff61060561128b565b61060d6112d6565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000609754161760975551f35b50503461024d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d5761067261128b565b5061014f73ffffffffffffffffffffffffffffffffffffffff60975416331461170c565b50503461024d57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d57805190826037546106d6816113c4565b8085529160019180831690811561076d5750600114610710575b5050506107028261070c940383611417565b5191829182611215565b0390f35b9450603785527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b8286106107555750505061070282602061070c95820101946106f0565b80546020878701810191909152909501948101610738565b61070c9750869350602092506107029491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b820101946106f0565b50503461024d57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d5760209073ffffffffffffffffffffffffffffffffffffffff606554169051908152f35b50346101d557827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d55782549060ff8260081c161590818092610da5575b8015610d8e575b15610d0b5760019282847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008316178755610cdd575b5061088e611637565b610896611637565b6108a660ff885460081c16611681565b81519267ffffffffffffffff93848111610cb157806108c66036546113c4565b94601f95868111610c43575b50602090868311600114610b89578b92610b7e575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82891b9260031b1c1916176036555b8151938411610b5257509082916109316037546113c4565b828111610ae2575b506020918311600114610a28578792610a1d575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82851b9260031b1c1916176037555b61098f60ff855460081c16611681565b61099833611355565b337fffffffffffffffffffffffff000000000000000000000000000000000000000060975416176097556109ca575051f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff85541685558351908152a151f35b01519050388061094d565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086941691603789527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae92895b818110610aca57508411610a93575b505050811b0160375561097f565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055388080610a85565b82840151855588969094019360209384019301610a76565b90919250603788527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae8380860160051c82019260208710610b49575b91869589929594930160051c01915b828110610b3b575050610939565b8a8155869550889101610b2d565b92508192610b1e565b8760416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b0151905038806108e7565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08a94169160368d527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8928d5b818110610c2b57508411610bf4575b505050811b01603655610919565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055388080610be6565b8284015185558c969094019360209384019301610bd7565b90915060368b527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b88680850160051c82019260208610610ca8575b918b91869594930160051c01915b828110610c9a5750506108d2565b8d81558594508b9101610c8c565b92508192610c7e565b6024896041847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661010117855538610885565b60849060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156108505750600160ff841614610850565b50600160ff841610610849565b50503461024d57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d57610dea6112d6565b8173ffffffffffffffffffffffffffffffffffffffff606554927fffffffffffffffffffffffff000000000000000000000000000000000000000084166065555192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b50503461024d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d578060209273ffffffffffffffffffffffffffffffffffffffff610ea561128b565b1681526033845220549051908152f35b50346101d557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d557610eec61128b565b6024359073ffffffffffffffffffffffffffffffffffffffff90610f158260975416331461170c565b16918215610f6b57507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082610f4f8794603554611487565b603555848452603382528584208181540190558551908152a351f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b50503461024d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d5761052d60209261103b61100961128b565b913381526034865284812073ffffffffffffffffffffffffffffffffffffffff84168252865284602435912054611487565b90336114c2565b50503461024d57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d576020905160128152f35b50503461024d5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d576020906110b861128b565b506110c16112b3565b5061052d6112d6565b50503461024d57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d576020906035549051908152f35b50503461024d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024d5760209061052d61114561128b565b60243590336114c2565b849084346101d557827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d5578260365461118d816113c4565b8085529160019180831690811561076d57506001146111b8575050506107028261070c940383611417565b9450603685527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b8286106111fd5750505061070282602061070c95820101946106f0565b805460208787018101919091529095019481016111e0565b919091602080825283519081818401526000945b828610611275575050601f817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0926040959611611268575b0116010190565b6000858286010152611261565b8581018201518487016040015294810194611229565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036112ae57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036112ae57565b73ffffffffffffffffffffffffffffffffffffffff6065541633036112f757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6065549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617606555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b90600182811c9216801561140d575b60208310146113de57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f16916113d3565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761145857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b81198111611493570190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8091169182156115b457169182156115305760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b604051906040820182811067ffffffffffffffff82111761145857604052600582527f735a45524f0000000000000000000000000000000000000000000000000000006020830152565b1561168857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b1561171357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e6f74206d6173746572636865660000000000000000000000000000000000006044820152fdfea264697066735822122048e2b662ae016a66880354621108038f7a69d7c78174c32a210c954e8f91067d64736f6c634300080f0033";

type SZEROConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SZEROConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SZERO__factory extends ContractFactory {
  constructor(...args: SZEROConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SZERO> {
    return super.deploy(overrides || {}) as Promise<SZERO>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SZERO {
    return super.attach(address) as SZERO;
  }
  override connect(signer: Signer): SZERO__factory {
    return super.connect(signer) as SZERO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SZEROInterface {
    return new utils.Interface(_abi) as SZEROInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SZERO {
    return new Contract(address, _abi, signerOrProvider) as SZERO;
  }
}
