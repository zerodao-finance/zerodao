message Transaction {
  enum Type {
    TRANSFER = 0; // Transfer asset from one chain to another
    SLASH = 1; // Remove darknode from peers
  }
  enum Chain {
    ETHEREUM = 0;
    MONERO = 1;
  }
  required Type type = 0;
  required bytes to = 1; // Address to send to
  required bytes data = 2;
  required uint64 nonce = 3;
  required bytes signature = 4;
  optional Chain chain = 5; // Only used for TRANSFER types
}

/*

Transactions submitted REBASE block and signed during BASE block:

1. Sign over to new mint authority message
2. Sign Monero UTXOs over to new gateway

*/

message BlockHeader {
  enum BlockType {
    STANDARD = 0;
    BASE = 1; // Define the signatories responsible for proposing, prevoting, and precommitting blocks up to and including the next base block.
    REBASE = 2;
  }
  required BlockType type = 0;
  required bytes parentHash = 1; // BASE must reference REBASE. REBASE must reference STANDARD. 
  required bytes baseHash = 2; // Hash of the most recently committed BASE block. In event of BASE block, should reference previous block.
  optional bytes txRoot = 3; // Transactions are only allowed in REBASE and STANDARD types.
  optional bytes planRoot = 4; // Optional for STANDARD and REBASE. Stores application specific data (needed by sMPC)
  required bytes prevStateRoot = 5;
  required uint64 height = 6;
  required uint64 round = 7;
  required uint64 timestamp = 8;
  optional bytes signatories = 9; // Can only be defined in BASE and REBASE types. BASE signatories must be same as parent (REBASE).
  required uint64 fee = 10; // Network block fee
}
